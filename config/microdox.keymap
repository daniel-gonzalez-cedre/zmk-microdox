/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_ctrl {
            timeout-ms = <50>;
            key-positions = <32 14>;
            bindings = <&kp LCTRL>;
        };
        combo_ctrl_thumb {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp LCTRL>;
        };
        combo_caps {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp CAPS>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |||||  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |||||  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |||||  N  |  M  |  ,  |  .  |  /  |
//             | GUI | LWR | SHF ||||| SPC | SYM | BSP |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P
   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
          &kp LGUI &mo 1 &kp SHFT &kp SPACE &mo 2 &kp BSPC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | ESC |     |     |      |     ||||| TAB |     |  UP | END | DEL  |
// | TAB | SCT |  CT | CTRL | NUM |||||  ←  |  ↓  |  ↑  |  →  | BKSP |
// |     |     |     |      |     |||||  \  | RET |     |     |      |
//             |     |      | SHF ||||| SPC |     |     |
                        bindings = <
   &trans       &trans          &trans      &trans    &trans     &kp TAB   &kp HOME &kp UP   &kp END   &kp DEL
   &kp TAB      &kp LS(LC(TAB)) &kp LC(TAB) &kp LCTRL &mo 3      &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &kp BSPC
   &trans       &trans          &trans      &trans    &trans     &kp BSLH  &kp RET  &trans   &trans    &trans
                                &trans      &trans    &kp SHFT   &kp SPACE &trans   &kp BSPC
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |||||  ^  |  &  |  *  |  =  |  \  |
// |  {  |  (  |  )  |  }  |  ~  |||||  ←  |  ↓  |  ↑  |  →  |  '' |
// |     |  [  |  ]  |     |     ||||| RET |  -  |  +  |  `  | RET |
//             | GUI |     | SHF ||||| SPC |     | ALT |
                        bindings = <
   &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp EQUAL &kp BSLH
   &kp LBRC  &kp LPAR  &kp RPAR  &kp RBRC  &kp TILDE   &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT &kp SQT
   &trans    &kp LBKT  &kp RBKT  &trans    &trans      &kp RET   &kp MINUS &kp PLUS        &kp GRAVE &kp RET
                       &kp LGUI  &trans    &kp SHFT    &kp SPACE &trans    &kp RALT
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     |     |     |     |||||     |  7  |  8  |  9  |     |
// |     |     |     |     |     |||||     |  4  |  5  |  6  |     |
// | BOOT|     |     |     |     |||||     |  1  |  2  |  3  |     |
//             |     |     |     |||||  0  |  .  |  ,  |
                        bindings = <
   &bt BT_CLR   &trans &trans &trans &trans    &kp A  &kp N7  &kp N8 &kp N9 &kp D
   &trans       &trans &trans &trans &trans    &kp B  &kp N4  &kp N5 &kp N6 &kp E
   &bootloader  &trans &trans &trans &trans    &kp C  &kp N1  &kp N2 &kp N3 &kp F
                 &trans &trans &trans    &kp N0 &kp DOT &kp COMMA
                        >;
                };
        };
};
